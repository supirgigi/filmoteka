{"mappings":"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","sources":["src/library.js","src/js/library.js","src/js/libraryModal.js"],"sourcesContent":["import './js/Api';\nimport './js/refs';\nimport './js/auth';\nimport './js/library';\nimport './js/pagination';\nimport './js/libraryModal';\nimport './js/authModal';\nimport './js/preloader';\n","import { refs } from './refs';\nimport { onSnapshot, doc } from 'firebase/firestore';\nimport { paginationSettings } from './pagination';\nimport { movieApi } from './Api';\nimport { cardLibraryTemplate } from './cardTemplate';\nimport { initializePagination } from './pagination';\nimport Notiflix from 'notiflix';\nimport { spinner } from './preloader';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth, db } from './auth';\n\nconst watchedBtn = document.querySelector('[data-watched]');\nconst queueBtn = document.querySelector('[data-queue]');\n\nonAuthStateChanged(auth, user => {\n  if (user) {\n    console.log('user logged in: ', user);\n    refs.authSignOut.parentElement.classList.remove('hidden');\n    refs.authOpen.parentElement.classList.add('hidden');\n    onWatched();\n  } else {\n    console.log('user logged out');\n    refs.authSignOut.parentElement.classList.add('hidden');\n    refs.authOpen.parentElement.classList.remove('hidden');\n    refs.pagination.classList.add('visually-hidden');\n  }\n});\n\nwatchedBtn.addEventListener('click', onWatched);\nqueueBtn.addEventListener('click', onQueue);\n\nasync function onWatched() {\n  if (!auth.currentUser) {\n    Notiflix.Notify.failure('Please sign in');\n    return;\n  }\n\n  movieApi.resetPage();\n\n  refs.movieList.innerHTML = '';\n  watchedBtn.classList.add('library-btns__btn_current');\n  queueBtn.classList.remove('library-btns__btn_current');\n\n  paginationSettings.paginationType = 'watched';\n  monitorWatchedChanges();\n}\n\nasync function onQueue() {\n  if (!auth.currentUser) {\n    Notiflix.Notify.failure('Please sign in');\n    return;\n  }\n\n  movieApi.resetPage();\n\n  refs.movieList.innerHTML = '';\n  watchedBtn.classList.remove('library-btns__btn_current');\n  queueBtn.classList.add('library-btns__btn_current');\n\n  paginationSettings.paginationType = 'queue';\n  monitorQueueChanges();\n}\n\nfunction monitorWatchedChanges() {\n  onSnapshot(doc(db, 'users', auth.currentUser.uid), snapshot => {\n    spinner.show();\n    const { watchedMovies } = snapshot.data();\n\n    paginationSettings.maxPages = Math.ceil(\n      watchedMovies.length / paginationSettings.perPage\n    );\n\n    let paginatedResults = watchedMovies.filter((result, index) => {\n      return (\n        index < movieApi.page * paginationSettings.perPage &&\n        index >=\n          movieApi.page * paginationSettings.perPage -\n            paginationSettings.perPage\n      );\n    });\n\n    if (paginatedResults.length === 0) {\n      console.log('empty');\n      movieApi.page -= 1;\n      paginatedResults = watchedMovies.filter((result, index) => {\n        return (\n          index < movieApi.page * paginationSettings.perPage &&\n          index >=\n            movieApi.page * paginationSettings.perPage -\n              paginationSettings.perPage\n        );\n      });\n    }\n\n    console.log(paginatedResults);\n\n    const markup = paginatedResults.map(cardLibraryTemplate).join('');\n    refs.movieList.innerHTML = markup;\n    initializePagination();\n    spinner.close();\n  });\n}\n\nfunction monitorQueueChanges() {\n  onSnapshot(doc(db, 'users', auth.currentUser.uid), snapshot => {\n    spinner.show();\n    const { queuedMovies } = snapshot.data();\n\n    paginationSettings.maxPages = Math.ceil(\n      queuedMovies.length / paginationSettings.perPage\n    );\n\n    let paginatedResults = queuedMovies.filter((result, index) => {\n      return (\n        index < movieApi.page * paginationSettings.perPage &&\n        index >=\n          movieApi.page * paginationSettings.perPage -\n            paginationSettings.perPage\n      );\n    });\n\n    if (paginatedResults.length === 0) {\n      console.log('empty');\n      movieApi.page--;\n      paginatedResults = queuedMovies.filter((result, index) => {\n        return (\n          index < movieApi.page * paginationSettings.perPage &&\n          index >=\n            movieApi.page * paginationSettings.perPage -\n              paginationSettings.perPage\n        );\n      });\n    }\n\n    console.log(paginatedResults);\n\n    const markup = paginatedResults.map(cardLibraryTemplate).join('');\n    refs.movieList.innerHTML = markup;\n    initializePagination();\n    spinner.close();\n  });\n}\n","import { refs } from './refs';\nimport { movieApi } from './Api';\nimport { dataFormat } from './dataFormat';\nimport { auth, db } from './auth';\nimport { selectedQueueTemplate, selectedWatchedTemplate } from './cardTemplate';\nimport { getDoc, doc, updateDoc } from 'firebase/firestore';\nimport { paginationSettings } from './pagination';\nimport Notiflix from 'notiflix';\n\nrefs.movieList.addEventListener('click', onLibraryClick);\n\nlet watchedRemove;\nlet queueRemove;\nlet currentMovie;\n\nfunction onLibraryClick(e) {\n  if (e.target === e.currentTarget) {\n    return;\n  }\n  const card = e.target.closest('li');\n  movieApi.id = card.dataset.id;\n  try {\n    movieApi.getMovie().then(data => {\n      const formattedData = dataFormat(data);\n      currentMovie = formattedData;\n      let modalMarkup;\n      console.log(currentMovie);\n\n      if (paginationSettings.paginationType === 'watched') {\n        modalMarkup = selectedWatchedTemplate(formattedData);\n        refs.movieModal.innerHTML = modalMarkup;\n        onWatchedCard();\n      } else {\n        modalMarkup = selectedQueueTemplate(formattedData);\n        refs.movieModal.innerHTML = modalMarkup;\n        onQueueCard();\n      }\n\n      refs.backdrop.classList.toggle('is-hidden');\n      refs.body.classList.toggle('locked');\n\n      refs.modalCloseBtn.addEventListener('click', toggleLibraryModal);\n      window.addEventListener('keydown', onEscPress);\n      refs.backdrop.addEventListener('click', onBackdropClick);\n    });\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n\nfunction onWatchedCard() {\n  watchedRemove = document.querySelector('[data-watched-remove]');\n  watchedRemove.addEventListener('click', removeFromWatchedLib);\n}\n\nfunction onQueueCard() {\n  queueRemove = document.querySelector('[data-queue-remove]');\n  queueRemove.addEventListener('click', removeFromQueueLib);\n}\n\nasync function removeFromQueueLib() {\n  let { queuedMovies } = await getDoc(\n    doc(db, 'users', auth.currentUser.uid)\n  ).then(res => {\n    return res.data();\n  });\n  queuedMovies = queuedMovies.filter(movie => {\n    return movie.id !== currentMovie.id;\n  });\n  await updateDoc(doc(db, 'users', auth.currentUser.uid), {\n    queuedMovies,\n  }).then(() => {\n    toggleLibraryModal();\n    Notiflix.Notify.success('Removed successfully');\n  });\n}\n\nasync function removeFromWatchedLib() {\n  let { watchedMovies } = await getDoc(\n    doc(db, 'users', auth.currentUser.uid)\n  ).then(res => {\n    return res.data();\n  });\n  watchedMovies = watchedMovies.filter(movie => {\n    return movie.id !== currentMovie.id;\n  });\n  await updateDoc(doc(db, 'users', auth.currentUser.uid), {\n    watchedMovies,\n  }).then(() => {\n    toggleLibraryModal();\n    Notiflix.Notify.success('Removed successfully');\n  });\n}\n\nfunction toggleLibraryModal() {\n  refs.backdrop.classList.toggle('is-hidden');\n  refs.body.classList.toggle('locked');\n  window.removeEventListener('keydown', onEscPress);\n  refs.modalCloseBtn.removeEventListener('click', toggleLibraryModal);\n  refs.backdrop.removeEventListener('click', onBackdropClick);\n  if (watchedRemove) {\n    watchedRemove.removeEventListener('click', removeFromWatchedLib);\n  } else {\n    queueRemove.removeEventListener('click', removeFromQueueLib);\n  }\n}\n\nfunction onEscPress(e) {\n  if ((e.code = 'ESC')) {\n    toggleLibraryModal();\n  }\n}\n\nfunction onBackdropClick(e) {\n  if (e.target === e.currentTarget) {\n    toggleLibraryModal();\n  }\n}\n"],"names":["parcelRequire","$krGWQ","$1cafa503bc57b7a0$var$watchedBtn","document","querySelector","$1cafa503bc57b7a0$var$queueBtn","async","$1cafa503bc57b7a0$var$onWatched","$bMZn5","auth","currentUser","$epB3k","movieApi","resetPage","refs","movieList","innerHTML","classList","add","remove","$2nhTy","paginationSettings","paginationType","$ftYLF","onSnapshot","doc","db","uid","snapshot","$ioBS9","spinner","show","watchedMovies","data","maxPages","Math","ceil","length","perPage","paginatedResults","filter","result","index","page","console","log","markup","map","$9L75J","cardLibraryTemplate","join","initializePagination","close","$parcel$interopDefault","$eWCmQ","Notify","failure","$eyjy7","onAuthStateChanged","user","authSignOut","parentElement","authOpen","pagination","addEventListener","queuedMovies","$a7452d7014976e84$var$watchedRemove","$a7452d7014976e84$var$queueRemove","$a7452d7014976e84$var$currentMovie","$a7452d7014976e84$var$removeFromQueueLib","getDoc","then","res","movie","id","updateDoc","$a7452d7014976e84$var$toggleLibraryModal","success","$a7452d7014976e84$var$removeFromWatchedLib","backdrop","toggle","body","window","removeEventListener","$a7452d7014976e84$var$onEscPress","modalCloseBtn","$a7452d7014976e84$var$onBackdropClick","e","code","target","currentTarget","card","closest","dataset","getMovie","formattedData","$kFh99","dataFormat","modalMarkup","selectedWatchedTemplate","movieModal","selectedQueueTemplate","error","message"],"version":3,"file":"library.99dd6d27.js.map"}
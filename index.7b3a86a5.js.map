{"mappings":"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","sources":["src/index.js","src/js/home.js","src/js/searchForm.js","src/js/movieModal.js"],"sourcesContent":["import './js/Api';\nimport './js/refs';\nimport './js/auth';\nimport './js/home';\nimport './js/searchForm';\nimport './js/pagination';\nimport './js/movieModal';\nimport './js/authModal';\nimport './js/preloader';\n","import { movieApi } from './Api';\nimport { refs } from './refs';\nimport { dataFormat } from './dataFormat';\nimport { paginationSettings, initializePagination } from './pagination';\nimport { cardTemplate } from './cardTemplate';\nimport { spinner } from './preloader';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth, db } from './auth';\nimport { doc } from 'firebase/firestore';\n\nfunction onHomeLoad() {\n  spinner.show();\n  movieApi.getTrending().then(data => {\n    console.log(data.results);\n    paginationSettings.maxPages = data.total_pages;\n    console.log(paginationSettings);\n    initializePagination();\n    const formattedResults = data.results.map(dataFormat);\n    const markup = formattedResults.map(cardTemplate).join('');\n    refs.movieList.innerHTML = markup;\n\n    spinner.close();\n  });\n  refs.pagination.classList.remove('visually-hidden');\n}\n\nonAuthStateChanged(auth, user => {\n  if (user) {\n    console.log('user logged in: ', user);\n    refs.authSignOut.parentElement.classList.remove('hidden');\n    refs.authOpen.parentElement.classList.add('hidden');\n    // docRef = doc(db, 'users', `${user.uid}`);\n  } else {\n    console.log('user logged out');\n    refs.authSignOut.parentElement.classList.add('hidden');\n    refs.authOpen.parentElement.classList.remove('hidden');\n    // docRef = null;\n  }\n});\n\nonHomeLoad();\n","import { movieApi } from './Api';\nimport { refs } from './refs';\nimport { dataFormat } from './dataFormat';\nimport { cardTemplate } from './cardTemplate';\nimport { paginationSettings, initializePagination } from './pagination';\nimport { spinner } from './preloader';\nimport Notiflix from 'notiflix';\n\nrefs.searchForm.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const currentQuery = e.currentTarget.elements.search.value;\n\n  if (currentQuery === '') {\n    document.querySelector('.error-msg').classList.remove('transparent');\n    return;\n  }\n\n  if (currentQuery !== movieApi.query) {\n    movieApi.query = currentQuery;\n  }\n\n  spinner.show();\n\n  paginationSettings.paginationType = 'search';\n  console.log(paginationSettings.paginationType);\n  movieApi.resetPage();\n\n  movieApi.searchMovies().then(data => {\n    if (data.results.length === 0) {\n      Notiflix.Notify.failure('No matches');\n      spinner.close();\n      return;\n    }\n    console.log(data);\n    paginationSettings.maxPages = data.total_pages;\n    console.log(paginationSettings);\n    initializePagination();\n    const formattedResults = data.results.map(dataFormat);\n    const markup = formattedResults.map(cardTemplate).join('');\n    refs.movieList.innerHTML = markup;\n    spinner.close();\n  });\n}\n","import { refs } from './refs';\nimport { movieApi } from './Api';\nimport { dataFormat } from './dataFormat';\nimport { db, auth } from './auth';\nimport { selectedMovieTemplate } from './cardTemplate';\nimport { getDoc, doc, setDoc } from 'firebase/firestore';\nimport Notiflix from 'notiflix';\n\nrefs.movieList.addEventListener('click', onGalleryClick);\n\nlet watchedAdd;\nlet queueAdd;\nlet currentMovie;\n\nfunction onGalleryClick(e) {\n  if (e.target === e.currentTarget) {\n    return;\n  }\n  const card = e.target.closest('li');\n  movieApi.id = card.dataset.id;\n  movieApi.getMovie().then(data => {\n    const formattedData = dataFormat(data);\n    currentMovie = formattedData;\n    console.log(currentMovie);\n\n    const modalMarkup = selectedMovieTemplate(formattedData);\n    refs.movieModal.innerHTML = modalMarkup;\n    onGalleryCard();\n\n    refs.backdrop.classList.toggle('is-hidden');\n    refs.body.classList.toggle('locked');\n\n    refs.modalCloseBtn.addEventListener('click', toggleModal);\n    window.addEventListener('keydown', onEscPress);\n    refs.backdrop.addEventListener('click', onBackdropClick);\n  });\n}\n\nfunction onGalleryCard() {\n  watchedAdd = document.querySelector('[data-watched-add]');\n  queueAdd = document.querySelector('[data-queue-add]');\n\n  watchedAdd.addEventListener('click', addToWatched);\n  queueAdd.addEventListener('click', addToQueue);\n}\n\nfunction toggleModal() {\n  refs.backdrop.classList.toggle('is-hidden');\n  refs.body.classList.toggle('locked');\n  window.removeEventListener('keydown', onEscPress);\n  refs.modalCloseBtn.removeEventListener('click', toggleModal);\n  refs.backdrop.removeEventListener('click', onBackdropClick);\n  watchedAdd.removeEventListener('click', addToWatched);\n  queueAdd.removeEventListener('click', addToQueue);\n}\n\nfunction onEscPress(e) {\n  console.log(e.code);\n  if (e.code === 'Escape') {\n    toggleModal();\n  }\n}\n\nfunction onBackdropClick(e) {\n  if (e.target === e.currentTarget) {\n    toggleModal();\n  }\n}\n\nasync function addToWatched() {\n  if (!auth.currentUser) {\n    Notiflix.Notify.failure('Please sign in');\n    return;\n  }\n  const userData = await getDoc(doc(db, 'users', auth.currentUser.uid)).then(\n    res => {\n      return res.data();\n    }\n  );\n  console.log(userData);\n  const { userId, watchedMovies, queuedMovies, userEmail } = userData;\n  const compare = watchedMovies.find(movie => movie.id === currentMovie.id);\n  if (compare) {\n    Notiflix.Notify.failure('Already in collection');\n    return;\n  }\n  watchedMovies.push(currentMovie);\n  await setDoc(doc(db, 'users', auth.currentUser.uid), {\n    userId,\n    userEmail,\n    watchedMovies,\n    queuedMovies,\n  });\n  Notiflix.Notify.success('Added to watched');\n}\n\nasync function addToQueue() {\n  if (!auth.currentUser) {\n    Notiflix.Notify.failure('Please sign in');\n    return;\n  }\n  const userData = await getDoc(doc(db, 'users', auth.currentUser.uid)).then(\n    res => {\n      return res.data();\n    }\n  );\n  console.log(userData);\n  const { userId, watchedMovies, queuedMovies, userEmail } = userData;\n  const compare = queuedMovies.find(movie => movie.id === currentMovie.id);\n  if (compare) {\n    Notiflix.Notify.failure('Already in collection');\n    return;\n  }\n  queuedMovies.push(currentMovie);\n  await setDoc(doc(db, 'users', auth.currentUser.uid), {\n    userId,\n    userEmail,\n    watchedMovies,\n    queuedMovies,\n  });\n  Notiflix.Notify.success('Added to queue');\n}\n"],"names":["parcelRequire","$fkvfI","$gQOBw","onAuthStateChanged","$euqRf","auth","user","console","log","$4Nugj","refs","authSignOut","parentElement","classList","remove","authOpen","add","$4smAb","spinner","show","movieApi","getTrending","then","data","results","$jcFG7","paginationSettings","maxPages","total_pages","initializePagination","markup","map","$Db1qJ","dataFormat","$bXAnp","cardTemplate","join","movieList","innerHTML","close","pagination","searchForm","addEventListener","e","preventDefault","currentQuery","currentTarget","elements","search","value","document","querySelector","query","paginationType","resetPage","searchMovies","length","$parcel$interopDefault","$iU1Pc","Notify","failure","$0753df227ac7447c$var$watchedAdd","$0753df227ac7447c$var$queueAdd","$0753df227ac7447c$var$currentMovie","$bpxeT","$0753df227ac7447c$var$toggleModal","backdrop","toggle","body","window","removeEventListener","$0753df227ac7447c$var$onEscPress","modalCloseBtn","$0753df227ac7447c$var$onBackdropClick","$0753df227ac7447c$var$addToWatched","$0753df227ac7447c$var$addToQueue","code","target","$0753df227ac7447c$var$_addToWatched","apply","this","arguments","$2TvXO","mark","_callee","userData","userId","watchedMovies","queuedMovies","userEmail","currentUser","$6m2hf","getDoc","doc","db","uid","res","_ctx","sent","find","movie","id","push","setDoc","success","$0753df227ac7447c$var$_addToQueue","card","closest","dataset","getMovie","formattedData","modalMarkup","selectedMovieTemplate","movieModal"],"version":3,"file":"index.7b3a86a5.js.map"}
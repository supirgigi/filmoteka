{"mappings":"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","sources":["src/index.js","src/js/home.js","src/js/searchForm.js","src/js/movieModal.js"],"sourcesContent":["import './js/Api';\nimport './js/refs';\nimport './js/auth';\nimport './js/home';\nimport './js/searchForm';\nimport './js/pagination';\nimport './js/movieModal';\nimport './js/authModal';\nimport './js/preloader';\n","import { movieApi } from './Api';\nimport { refs } from './refs';\nimport { dataFormat } from './dataFormat';\nimport { paginationSettings, initializePagination } from './pagination';\nimport { cardTemplate } from './cardTemplate';\nimport { spinner } from './preloader';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from './auth';\n\nfunction onHomeLoad() {\n  spinner.show();\n  try {\n    movieApi.getTrending().then(data => {\n      console.log(data.results);\n      paginationSettings.maxPages = data.total_pages;\n      console.log(paginationSettings);\n      initializePagination();\n      const formattedResults = data.results.map(dataFormat);\n      const markup = formattedResults.map(cardTemplate).join('');\n      refs.movieList.innerHTML = markup;\n      refs.pagination.classList.remove('visually-hidden');\n    });\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  } finally {\n    spinner.close();\n  }\n}\n\nonAuthStateChanged(auth, user => {\n  if (user) {\n    console.log('user logged in: ', user);\n    refs.authSignOut.parentElement.classList.remove('hidden');\n    refs.authOpen.parentElement.classList.add('hidden');\n  } else {\n    console.log('user logged out');\n    refs.authSignOut.parentElement.classList.add('hidden');\n    refs.authOpen.parentElement.classList.remove('hidden');\n  }\n});\n\nonHomeLoad();\n","import { movieApi } from './Api';\nimport { refs } from './refs';\nimport { dataFormat } from './dataFormat';\nimport { cardTemplate } from './cardTemplate';\nimport { paginationSettings, initializePagination } from './pagination';\nimport { spinner } from './preloader';\nimport Notiflix from 'notiflix';\n\nrefs.searchForm.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const currentQuery = e.currentTarget.elements.search.value;\n\n  if (currentQuery === '') {\n    Notiflix.Notify.failure('Please enter correct movie title');\n    return;\n  }\n\n  if (currentQuery !== movieApi.query) {\n    movieApi.query = currentQuery;\n  }\n\n  spinner.show();\n\n  paginationSettings.paginationType = 'search';\n  console.log(paginationSettings.paginationType);\n  movieApi.resetPage();\n\n  try {\n    movieApi.searchMovies().then(data => {\n      if (data.results.length === 0) {\n        Notiflix.Notify.failure('No matches');\n        spinner.close();\n        return;\n      }\n      console.log(data);\n      paginationSettings.maxPages = data.total_pages;\n      console.log(paginationSettings);\n      initializePagination();\n      const formattedResults = data.results.map(dataFormat);\n      const markup = formattedResults.map(cardTemplate).join('');\n      refs.movieList.innerHTML = markup;\n    });\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  } finally {\n    spinner.close();\n  }\n}\n","import { refs } from './refs';\nimport { movieApi } from './Api';\nimport { dataFormat } from './dataFormat';\nimport { db, auth } from './auth';\nimport { selectedMovieTemplate } from './cardTemplate';\nimport { getDoc, doc, updateDoc } from 'firebase/firestore';\nimport Notiflix from 'notiflix';\n\nrefs.movieList.addEventListener('click', onGalleryClick);\n\nlet watchedAdd;\nlet queueAdd;\nlet currentMovie;\n\nasync function onGalleryClick(e) {\n  if (e.target === e.currentTarget) {\n    return;\n  }\n  const card = e.target.closest('li');\n  movieApi.id = card.dataset.id;\n  try {\n    movieApi.getMovie().then(async data => {\n      const formattedData = dataFormat(data);\n      currentMovie = formattedData;\n      const modalMarkup = selectedMovieTemplate(formattedData);\n      refs.movieModal.innerHTML = modalMarkup;\n      onGalleryCard();\n\n      if (auth.currentUser) {\n        const userData = await getDoc(\n          doc(db, 'users', auth.currentUser.uid)\n        ).then(res => {\n          return res.data();\n        });\n        console.log(userData);\n        const { watchedMovies, queuedMovies } = userData;\n        if (watchedMovies.find(movie => movie.id === currentMovie.id)) {\n          toggleWatched();\n        }\n        if (queuedMovies.find(movie => movie.id === currentMovie.id)) {\n          toggleQueue();\n        }\n      }\n      refs.backdrop.classList.toggle('is-hidden');\n      refs.body.classList.toggle('locked');\n      refs.modalCloseBtn.addEventListener('click', toggleModal);\n      window.addEventListener('keydown', onEscPress);\n      refs.backdrop.addEventListener('click', onBackdropClick);\n    });\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n\nfunction onGalleryCard() {\n  watchedAdd = document.querySelector('[data-watched-add]');\n  queueAdd = document.querySelector('[data-queue-add]');\n  watchedAdd.addEventListener('click', addToWatched);\n  queueAdd.addEventListener('click', addToQueue);\n}\n\nfunction toggleModal() {\n  refs.backdrop.classList.toggle('is-hidden');\n  refs.body.classList.toggle('locked');\n  window.removeEventListener('keydown', onEscPress);\n  refs.modalCloseBtn.removeEventListener('click', toggleModal);\n  refs.backdrop.removeEventListener('click', onBackdropClick);\n  watchedAdd.removeEventListener('click', addToWatched);\n  queueAdd.removeEventListener('click', addToQueue);\n  watchedAdd.removeEventListener('click', removeFromWatched);\n  queueAdd.removeEventListener('click', removeFromQueue);\n}\n\nfunction onEscPress(e) {\n  console.log(e.code);\n  if (e.code === 'Escape') {\n    toggleModal();\n  }\n}\n\nfunction onBackdropClick(e) {\n  if (e.target === e.currentTarget) {\n    toggleModal();\n  }\n}\n\nfunction toggleWatched() {\n  if (watchedAdd.textContent === 'add to watched') {\n    watchedAdd.textContent = 'remove from watched';\n    watchedAdd.removeEventListener('click', addToWatched);\n    watchedAdd.addEventListener('click', removeFromWatched);\n    watchedAdd.classList.add('modal-card-buttons__btn_current');\n  } else {\n    watchedAdd.textContent = 'add to watched';\n    watchedAdd.addEventListener('click', addToWatched);\n    watchedAdd.removeEventListener('click', removeFromWatched);\n    watchedAdd.classList.remove('modal-card-buttons__btn_current');\n  }\n}\n\nfunction toggleQueue() {\n  if (queueAdd.textContent === 'add to queue') {\n    queueAdd.textContent = 'remove from queue';\n    queueAdd.removeEventListener('click', addToQueue);\n    queueAdd.addEventListener('click', removeFromQueue);\n    queueAdd.classList.add('modal-card-buttons__btn_current');\n  } else {\n    queueAdd.textContent = 'add to queue';\n    queueAdd.addEventListener('click', addToQueue);\n    queueAdd.removeEventListener('click', removeFromQueue);\n    queueAdd.classList.remove('modal-card-buttons__btn_current');\n  }\n}\n\nasync function addToWatched() {\n  if (!auth.currentUser) {\n    Notiflix.Notify.failure('Please sign in');\n    return;\n  }\n  try {\n    const { watchedMovies } = await getDoc(\n      doc(db, 'users', auth.currentUser.uid)\n    ).then(res => {\n      return res.data();\n    });\n\n    watchedMovies.push(currentMovie);\n\n    await updateDoc(doc(db, 'users', auth.currentUser.uid), {\n      watchedMovies,\n    }).then(() => {\n      Notiflix.Notify.success('Added to watched');\n      toggleWatched();\n    });\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n\nasync function removeFromWatched() {\n  try {\n    let { watchedMovies } = await getDoc(\n      doc(db, 'users', auth.currentUser.uid)\n    ).then(res => {\n      return res.data();\n    });\n    watchedMovies = watchedMovies.filter(movie => {\n      return movie.id !== currentMovie.id;\n    });\n    await updateDoc(doc(db, 'users', auth.currentUser.uid), {\n      watchedMovies,\n    }).then(() => {\n      Notiflix.Notify.success('Removed successfully');\n      toggleWatched();\n    });\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n\nasync function addToQueue() {\n  if (!auth.currentUser) {\n    Notiflix.Notify.failure('Please sign in');\n    return;\n  }\n  try {\n    const { queuedMovies } = await getDoc(\n      doc(db, 'users', auth.currentUser.uid)\n    ).then(res => {\n      return res.data();\n    });\n\n    queuedMovies.push(currentMovie);\n\n    await updateDoc(doc(db, 'users', auth.currentUser.uid), {\n      queuedMovies,\n    }).then(() => {\n      Notiflix.Notify.success('Added to queue');\n      toggleQueue();\n    });\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n\nasync function removeFromQueue() {\n  try {\n    let { queuedMovies } = await getDoc(\n      doc(db, 'users', auth.currentUser.uid)\n    ).then(res => {\n      return res.data();\n    });\n    queuedMovies = queuedMovies.filter(movie => {\n      return movie.id !== currentMovie.id;\n    });\n    await updateDoc(doc(db, 'users', auth.currentUser.uid), {\n      queuedMovies,\n    }).then(() => {\n      Notiflix.Notify.success('Removed successfully');\n      toggleQueue();\n    });\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n"],"names":["parcelRequire","$epB3k","$eyjy7","onAuthStateChanged","$bMZn5","auth","user","console","log","$krGWQ","refs","authSignOut","parentElement","classList","remove","authOpen","add","$ioBS9","spinner","show","movieApi","getTrending","then","data","results","$2nhTy","paginationSettings","maxPages","total_pages","initializePagination","markup","map","$kFh99","dataFormat","$9L75J","cardTemplate","join","movieList","innerHTML","pagination","error","Notiflix","Notify","failure","message","close","$7a8fb0f659835779$var$onHomeLoad","searchForm","addEventListener","e","preventDefault","currentQuery","currentTarget","elements","search","value","$parcel$interopDefault","$eWCmQ","query","paginationType","resetPage","searchMovies","length","$ccc271a2338f7cf1$var$watchedAdd","$ccc271a2338f7cf1$var$queueAdd","$ccc271a2338f7cf1$var$currentMovie","$ccc271a2338f7cf1$var$toggleModal","backdrop","toggle","body","window","removeEventListener","$ccc271a2338f7cf1$var$onEscPress","modalCloseBtn","$ccc271a2338f7cf1$var$onBackdropClick","$ccc271a2338f7cf1$var$addToWatched","$ccc271a2338f7cf1$var$addToQueue","$ccc271a2338f7cf1$var$removeFromWatched","$ccc271a2338f7cf1$var$removeFromQueue","code","target","$ccc271a2338f7cf1$var$toggleWatched","textContent","$ccc271a2338f7cf1$var$toggleQueue","async","currentUser","watchedMovies","$ftYLF","getDoc","doc","db","uid","res","push","updateDoc","success","filter","movie","id","queuedMovies","card","closest","dataset","getMovie","formattedData","modalMarkup","selectedMovieTemplate","movieModal","document","querySelector","userData","find"],"version":3,"file":"index.10da1f79.js.map"}
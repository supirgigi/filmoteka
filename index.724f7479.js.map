{"mappings":"qhBAAAA,EAAA,S,sBCAA,IAAAC,EAAAD,EAAA,S,uGA0BA,EAAAE,EAAAC,oBAAmBC,EAAAC,MAAMC,IACnBA,GACFC,QAAQC,IAAI,mBAAoBF,GAChCG,EAAAC,KAAKC,YAAYC,cAAcC,UAAUC,OAAO,UAChDL,EAAAC,KAAKK,SAASH,cAAcC,UAAUG,IAAI,YAG1CT,QAAQC,IAAI,mBACZC,EAAAC,KAAKC,YAAYC,cAAcC,UAAUG,IAAI,UAC7CP,EAAAC,KAAKK,SAASH,cAAcC,UAAUC,OAAO,U,IAxB/CG,EAAAC,QAAQC,OACRlB,EAAAmB,SAASC,cAAcC,MAAKC,IAC1BhB,QAAQC,IAAIe,EAAKC,SACjBC,EAAAC,mBAAmBC,SAAWJ,EAAKK,YACnCrB,QAAQC,IAAIiB,EAAAC,qBACZ,EAAAD,EAAAI,wBACA,MACMC,EADmBP,EAAKC,QAAQO,IAAIC,EAAAC,YACVF,IAAIG,EAAAC,cAAcC,KAAK,IACvD3B,EAAAC,KAAK2B,UAAUC,UAAYR,EAE3Bb,EAAAC,QAAQqB,OAAO,IAEjB9B,EAAAC,KAAK8B,WAAW3B,UAAUC,OAAO,mBCvBnCb,EAAAD,EAAA,S,iEAAA,I,aAQAS,EAAAC,KAAK+B,WAAWC,iBAAiB,UAEjC,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMC,EAAeF,EAAEG,cAAcC,SAASC,OAAOC,MAErD,GAAqB,KAAjBJ,EAEF,YADAK,SAASC,cAAc,cAActC,UAAUC,OAAO,eAIpD+B,IAAiB5C,EAAAmB,SAASgC,QAC5BnD,EAAAmB,SAASgC,MAAQP,GAGnB5B,EAAAC,QAAQC,OAERM,EAAAC,mBAAmB2B,eAAiB,SACpC9C,QAAQC,IAAIiB,EAAAC,mBAAmB2B,gBAC/BpD,EAAAmB,SAASkC,YAETrD,EAAAmB,SAASmC,eAAejC,MAAKC,IAC3B,GAA4B,IAAxBA,EAAKC,QAAQgC,OAGf,OAFAC,EAAAC,GAASC,OAAOC,QAAQ,mBACxB3C,EAAAC,QAAQqB,QAGVhC,QAAQC,IAAIe,GACZE,EAAAC,mBAAmBC,SAAWJ,EAAKK,YACnCrB,QAAQC,IAAIiB,EAAAC,qBACZ,EAAAD,EAAAI,wBACA,MACMC,EADmBP,EAAKC,QAAQO,IAAIC,EAAAC,YACVF,IAAIG,EAAAC,cAAcC,KAAK,IACvD3B,EAAAC,KAAK2B,UAAUC,UAAYR,EAC3Bb,EAAAC,QAAQqB,OAAO,G,eC3CnB9B,EAAAT,EAAA,S,oDAAA,I,0BAUA,IAAI6D,EACAC,EACAC,EAkCJ,SAASC,IACPvD,EAAAC,KAAKuD,SAASpD,UAAUqD,OAAO,aAC/BzD,EAAAC,KAAKyD,KAAKtD,UAAUqD,OAAO,UAC3BE,OAAOC,oBAAoB,UAAWC,GACtC7D,EAAAC,KAAK6D,cAAcF,oBAAoB,QAASL,GAChDvD,EAAAC,KAAKuD,SAASI,oBAAoB,QAASG,GAC3CX,EAAWQ,oBAAoB,QAASI,GACxCX,EAASO,oBAAoB,QAASK,E,CAGxC,SAASJ,EAAW3B,GAClBpC,QAAQC,IAAImC,EAAEgC,MACC,WAAXhC,EAAEgC,MACJX,G,CAIJ,SAASQ,EAAgB7B,GACnBA,EAAEiC,SAAWjC,EAAEG,eACjBkB,G,CAIJa,eAAeJ,IACb,IAAKrE,EAAAC,KAAKyE,YAER,YADArB,EAAAC,GAASC,OAAOC,QAAQ,kBAG1B,MAAMmB,QAAiB,EAAAC,EAAAC,SAAO,EAAAD,EAAAE,KAAI9E,EAAA+E,GAAI,QAAS/E,EAAAC,KAAKyE,YAAYM,MAAM9D,MACpE+D,GACSA,EAAI9D,SAGfhB,QAAQC,IAAIuE,GACZ,MAAMO,OAAEA,EAAMC,cAAEA,EAAaC,aAAEA,EAAYC,UAAEA,GAAcV,EAC3CQ,EAAcG,MAAKC,GAASA,EAAMC,KAAO7B,EAAa6B,KAEpEnC,EAAAC,GAASC,OAAOC,QAAQ,0BAG1B2B,EAAcM,KAAK9B,SACb,EAAAiB,EAAAc,SAAO,EAAAd,EAAAE,KAAI9E,EAAA+E,GAAI,QAAS/E,EAAAC,KAAKyE,YAAYM,KAAM,C,OACnDE,E,UACAG,E,cACAF,E,aACAC,IAEF/B,EAAAC,GAASC,OAAOoC,QAAQ,oB,CAG1BlB,eAAeH,IACb,IAAKtE,EAAAC,KAAKyE,YAER,YADArB,EAAAC,GAASC,OAAOC,QAAQ,kBAG1B,MAAMmB,QAAiB,EAAAC,EAAAC,SAAO,EAAAD,EAAAE,KAAI9E,EAAA+E,GAAI,QAAS/E,EAAAC,KAAKyE,YAAYM,MAAM9D,MACpE+D,GACSA,EAAI9D,SAGfhB,QAAQC,IAAIuE,GACZ,MAAMO,OAAEA,EAAMC,cAAEA,EAAaC,aAAEA,EAAYC,UAAEA,GAAcV,EAC3CS,EAAaE,MAAKC,GAASA,EAAMC,KAAO7B,EAAa6B,KAEnEnC,EAAAC,GAASC,OAAOC,QAAQ,0BAG1B4B,EAAaK,KAAK9B,SACZ,EAAAiB,EAAAc,SAAO,EAAAd,EAAAE,KAAI9E,EAAA+E,GAAI,QAAS/E,EAAAC,KAAKyE,YAAYM,KAAM,C,OACnDE,E,UACAG,E,cACAF,E,aACAC,IAEF/B,EAAAC,GAASC,OAAOoC,QAAQ,kB,CAhH1BtF,EAAAC,KAAK2B,UAAUK,iBAAiB,SAMhC,SAAwBC,GACtB,GAAIA,EAAEiC,SAAWjC,EAAEG,cACjB,OAEF,MAAMkD,EAAOrD,EAAEiC,OAAOqB,QAAQ,MAC9BhG,EAAAmB,SAASwE,GAAKI,EAAKE,QAAQN,GAC3B3F,EAAAmB,SAAS+E,WAAW7E,MAAKC,IACvB,MAAM6E,GAAgB,EAAApE,EAAAC,YAAWV,GACjCwC,EAAeqC,EACf7F,QAAQC,IAAIuD,GAEZ,MAAMsC,GAAc,EAAAnE,EAAAoE,uBAAsBF,GAC1C3F,EAAAC,KAAK6F,WAAWjE,UAAY+D,EAa9BxC,EAAaX,SAASC,cAAc,sBACpCW,EAAWZ,SAASC,cAAc,oBAElCU,EAAWnB,iBAAiB,QAAS+B,GACrCX,EAASpB,iBAAiB,QAASgC,GAdjCjE,EAAAC,KAAKuD,SAASpD,UAAUqD,OAAO,aAC/BzD,EAAAC,KAAKyD,KAAKtD,UAAUqD,OAAO,UAE3BzD,EAAAC,KAAK6D,cAAc7B,iBAAiB,QAASsB,GAC7CI,OAAO1B,iBAAiB,UAAW4B,GACnC7D,EAAAC,KAAKuD,SAASvB,iBAAiB,QAAS8B,EAAgB,G","sources":["src/index.js","src/js/home.js","src/js/searchForm.js","src/js/movieModal.js"],"sourcesContent":["import './js/Api';\nimport './js/refs';\nimport './js/auth';\nimport './js/home';\nimport './js/searchForm';\nimport './js/pagination';\nimport './js/movieModal';\nimport './js/authModal';\nimport './js/preloader';\n","import { movieApi } from './Api';\nimport { refs } from './refs';\nimport { dataFormat } from './dataFormat';\nimport { paginationSettings, initializePagination } from './pagination';\nimport { cardTemplate } from './cardTemplate';\nimport { spinner } from './preloader';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth, db } from './auth';\nimport { doc } from 'firebase/firestore';\n\nfunction onHomeLoad() {\n  spinner.show();\n  movieApi.getTrending().then(data => {\n    console.log(data.results);\n    paginationSettings.maxPages = data.total_pages;\n    console.log(paginationSettings);\n    initializePagination();\n    const formattedResults = data.results.map(dataFormat);\n    const markup = formattedResults.map(cardTemplate).join('');\n    refs.movieList.innerHTML = markup;\n\n    spinner.close();\n  });\n  refs.pagination.classList.remove('visually-hidden');\n}\n\nonAuthStateChanged(auth, user => {\n  if (user) {\n    console.log('user logged in: ', user);\n    refs.authSignOut.parentElement.classList.remove('hidden');\n    refs.authOpen.parentElement.classList.add('hidden');\n    // docRef = doc(db, 'users', `${user.uid}`);\n  } else {\n    console.log('user logged out');\n    refs.authSignOut.parentElement.classList.add('hidden');\n    refs.authOpen.parentElement.classList.remove('hidden');\n    // docRef = null;\n  }\n});\n\nonHomeLoad();\n","import { movieApi } from './Api';\nimport { refs } from './refs';\nimport { dataFormat } from './dataFormat';\nimport { cardTemplate } from './cardTemplate';\nimport { paginationSettings, initializePagination } from './pagination';\nimport { spinner } from './preloader';\nimport Notiflix from 'notiflix';\n\nrefs.searchForm.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const currentQuery = e.currentTarget.elements.search.value;\n\n  if (currentQuery === '') {\n    document.querySelector('.error-msg').classList.remove('transparent');\n    return;\n  }\n\n  if (currentQuery !== movieApi.query) {\n    movieApi.query = currentQuery;\n  }\n\n  spinner.show();\n\n  paginationSettings.paginationType = 'search';\n  console.log(paginationSettings.paginationType);\n  movieApi.resetPage();\n\n  movieApi.searchMovies().then(data => {\n    if (data.results.length === 0) {\n      Notiflix.Notify.failure('No matches');\n      spinner.close();\n      return;\n    }\n    console.log(data);\n    paginationSettings.maxPages = data.total_pages;\n    console.log(paginationSettings);\n    initializePagination();\n    const formattedResults = data.results.map(dataFormat);\n    const markup = formattedResults.map(cardTemplate).join('');\n    refs.movieList.innerHTML = markup;\n    spinner.close();\n  });\n}\n","import { refs } from './refs';\nimport { movieApi } from './Api';\nimport { dataFormat } from './dataFormat';\nimport { db, auth } from './auth';\nimport { selectedMovieTemplate } from './cardTemplate';\nimport { getDoc, doc, setDoc } from 'firebase/firestore';\nimport Notiflix from 'notiflix';\n\nrefs.movieList.addEventListener('click', onGalleryClick);\n\nlet watchedAdd;\nlet queueAdd;\nlet currentMovie;\n\nfunction onGalleryClick(e) {\n  if (e.target === e.currentTarget) {\n    return;\n  }\n  const card = e.target.closest('li');\n  movieApi.id = card.dataset.id;\n  movieApi.getMovie().then(data => {\n    const formattedData = dataFormat(data);\n    currentMovie = formattedData;\n    console.log(currentMovie);\n\n    const modalMarkup = selectedMovieTemplate(formattedData);\n    refs.movieModal.innerHTML = modalMarkup;\n    onGalleryCard();\n\n    refs.backdrop.classList.toggle('is-hidden');\n    refs.body.classList.toggle('locked');\n\n    refs.modalCloseBtn.addEventListener('click', toggleModal);\n    window.addEventListener('keydown', onEscPress);\n    refs.backdrop.addEventListener('click', onBackdropClick);\n  });\n}\n\nfunction onGalleryCard() {\n  watchedAdd = document.querySelector('[data-watched-add]');\n  queueAdd = document.querySelector('[data-queue-add]');\n\n  watchedAdd.addEventListener('click', addToWatched);\n  queueAdd.addEventListener('click', addToQueue);\n}\n\nfunction toggleModal() {\n  refs.backdrop.classList.toggle('is-hidden');\n  refs.body.classList.toggle('locked');\n  window.removeEventListener('keydown', onEscPress);\n  refs.modalCloseBtn.removeEventListener('click', toggleModal);\n  refs.backdrop.removeEventListener('click', onBackdropClick);\n  watchedAdd.removeEventListener('click', addToWatched);\n  queueAdd.removeEventListener('click', addToQueue);\n}\n\nfunction onEscPress(e) {\n  console.log(e.code);\n  if (e.code === 'Escape') {\n    toggleModal();\n  }\n}\n\nfunction onBackdropClick(e) {\n  if (e.target === e.currentTarget) {\n    toggleModal();\n  }\n}\n\nasync function addToWatched() {\n  if (!auth.currentUser) {\n    Notiflix.Notify.failure('Please sign in');\n    return;\n  }\n  const userData = await getDoc(doc(db, 'users', auth.currentUser.uid)).then(\n    res => {\n      return res.data();\n    }\n  );\n  console.log(userData);\n  const { userId, watchedMovies, queuedMovies, userEmail } = userData;\n  const compare = watchedMovies.find(movie => movie.id === currentMovie.id);\n  if (compare) {\n    Notiflix.Notify.failure('Already in collection');\n    return;\n  }\n  watchedMovies.push(currentMovie);\n  await setDoc(doc(db, 'users', auth.currentUser.uid), {\n    userId,\n    userEmail,\n    watchedMovies,\n    queuedMovies,\n  });\n  Notiflix.Notify.success('Added to watched');\n}\n\nasync function addToQueue() {\n  if (!auth.currentUser) {\n    Notiflix.Notify.failure('Please sign in');\n    return;\n  }\n  const userData = await getDoc(doc(db, 'users', auth.currentUser.uid)).then(\n    res => {\n      return res.data();\n    }\n  );\n  console.log(userData);\n  const { userId, watchedMovies, queuedMovies, userEmail } = userData;\n  const compare = queuedMovies.find(movie => movie.id === currentMovie.id);\n  if (compare) {\n    Notiflix.Notify.failure('Already in collection');\n    return;\n  }\n  queuedMovies.push(currentMovie);\n  await setDoc(doc(db, 'users', auth.currentUser.uid), {\n    userId,\n    userEmail,\n    watchedMovies,\n    queuedMovies,\n  });\n  Notiflix.Notify.success('Added to queue');\n}\n"],"names":["parcelRequire","$epB3k","$eyjy7","onAuthStateChanged","$bMZn5","auth","user","console","log","$krGWQ","refs","authSignOut","parentElement","classList","remove","authOpen","add","$ioBS9","spinner","show","movieApi","getTrending","then","data","results","$2nhTy","paginationSettings","maxPages","total_pages","initializePagination","markup","map","$kFh99","dataFormat","$9L75J","cardTemplate","join","movieList","innerHTML","close","pagination","searchForm","addEventListener","e","preventDefault","currentQuery","currentTarget","elements","search","value","document","querySelector","query","paginationType","resetPage","searchMovies","length","$parcel$interopDefault","$eWCmQ","Notify","failure","$ccc271a2338f7cf1$var$watchedAdd","$ccc271a2338f7cf1$var$queueAdd","$ccc271a2338f7cf1$var$currentMovie","$ccc271a2338f7cf1$var$toggleModal","backdrop","toggle","body","window","removeEventListener","$ccc271a2338f7cf1$var$onEscPress","modalCloseBtn","$ccc271a2338f7cf1$var$onBackdropClick","$ccc271a2338f7cf1$var$addToWatched","$ccc271a2338f7cf1$var$addToQueue","code","target","async","currentUser","userData","$ftYLF","getDoc","doc","db","uid","res","userId","watchedMovies","queuedMovies","userEmail","find","movie","id","push","setDoc","success","card","closest","dataset","getMovie","formattedData","modalMarkup","selectedMovieTemplate","movieModal"],"version":3,"file":"index.724f7479.js.map"}